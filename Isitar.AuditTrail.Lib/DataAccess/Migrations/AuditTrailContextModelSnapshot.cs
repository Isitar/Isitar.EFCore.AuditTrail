// <auto-generated />
using System;
using Isitar.AuditTrail.Lib.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NodaTime;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Isitar.AuditTrail.Lib.DataAccess.Migrations
{
    [DbContext(typeof(AuditTrailContext))]
    partial class AuditTrailContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Isitar.AuditTrail.Lib.DataAccess.Dao.AuditTrailEntry<Isitar.AuditTrail.Lib.DataAccess.Dao.PLC>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("EntryType")
                        .HasColumnType("integer");

                    b.Property<string>("FromValue")
                        .HasColumnType("text");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uuid");

                    b.Property<Instant>("Timestamp")
                        .HasColumnType("timestamp");

                    b.Property<string>("ToValue")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("AuditTrailEntry<PLC>");
                });

            modelBuilder.Entity("Isitar.AuditTrail.Lib.DataAccess.Dao.AuditTrailEntry<Isitar.AuditTrail.Lib.DataAccess.Dao.SwitchCabinet>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("EntryType")
                        .HasColumnType("integer");

                    b.Property<string>("FromValue")
                        .HasColumnType("text");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uuid");

                    b.Property<Instant>("Timestamp")
                        .HasColumnType("timestamp");

                    b.Property<string>("ToValue")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("AuditTrailEntry<SwitchCabinet>");
                });

            modelBuilder.Entity("Isitar.AuditTrail.Lib.DataAccess.Dao.PLC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid?>("SwitchCabinetId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SwitchCabinetId");

                    b.ToTable("PLCs");
                });

            modelBuilder.Entity("Isitar.AuditTrail.Lib.DataAccess.Dao.SwitchCabinet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SwitchCabinets");
                });

            modelBuilder.Entity("Isitar.AuditTrail.Lib.DataAccess.Dao.AuditTrailEntry<Isitar.AuditTrail.Lib.DataAccess.Dao.PLC>", b =>
                {
                    b.HasOne("Isitar.AuditTrail.Lib.DataAccess.Dao.PLC", "Subject")
                        .WithMany("AuditTrailEntries")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Isitar.AuditTrail.Lib.DataAccess.Dao.AuditTrailEntry<Isitar.AuditTrail.Lib.DataAccess.Dao.SwitchCabinet>", b =>
                {
                    b.HasOne("Isitar.AuditTrail.Lib.DataAccess.Dao.SwitchCabinet", "Subject")
                        .WithMany("AuditTrailEntries")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Isitar.AuditTrail.Lib.DataAccess.Dao.PLC", b =>
                {
                    b.HasOne("Isitar.AuditTrail.Lib.DataAccess.Dao.SwitchCabinet", "SwitchCabinet")
                        .WithMany("PLCs")
                        .HasForeignKey("SwitchCabinetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
